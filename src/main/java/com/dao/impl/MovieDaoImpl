package com.techprimers.jpa.springjpahibernateexample.dao.impl;

import com.techprimers.jpa.springjpahibernateexample.dao.MovieDao;
import com.techprimers.jpa.springjpahibernateexample.model.Movie;
import com.techprimers.jpa.springjpahibernateexample.repository.MovieRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BatchPreparedStatementSetter;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.support.JdbcDaoSupport;
import org.springframework.stereotype.Repository;

import javax.sql.DataSource;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;

@Repository
public class MovieDaoImpl implements MovieDao
{

    @Autowired
    private MovieRepository movieRepository;

   @Autowired
    private JdbcTemplate jdbcTemplate;

   /* @Autowired
    public MovieDaoImpl(DataSource dataSource) {
        super();
        setDataSource(dataSource);
    }*/

    private static final String SQL ="Insert into movie "+"(movieId,actor,actoress,genre,imdbRating,language,movieName,reviews,theaterid) VALUES (?,?,?,?,?,?,?,?,?)";


    @Override
    public Movie save(Movie movie)
    {
       return movieRepository.save(movie);
    }

    @Override
    public List<Movie> getAllMovies() {
       return movieRepository.findAll();
    }

    @Override
    public Movie searchMovie(String movieName) {

        return movieRepository.findByName(movieName);
    }

    /*@Override
    public void insertMovies(List<Movie> movieList) {

       getJdbcTemplate().batchUpdate(SQL, new BatchPreparedStatementSetter() {
            public void setValues(PreparedStatement ps, int i) throws SQLException {
                Movie movie = movieList.get(i);
                ps.setInt(1, movie.getMovieId());
                ps.setString(2, movie.getActor());
                ps.setString(3, movie.getActoress());
                ps.setString(4, movie.getGenre());
                ps.setString(5, movie.getImdbRating());
                ps.setString(6, movie.getLanguage());
                ps.setString(7, movie.getMovieName());
                ps.setString(8, movie.getReviews());
              //  ps.setString(9, movie.getTheaterid());
            }
            public int getBatchSize() {
                return movieList.size();
            }
        });
    }*/


}
